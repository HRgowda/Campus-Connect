"""Add channel tables

Revision ID: d75f11537a84
Revises: cbc4fe2f173d
Create Date: 2025-10-28 08:29:38.210174

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd75f11537a84'
down_revision: Union[str, None] = 'cbc4fe2f173d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # First, add columns as nullable
    op.add_column('channel_members', sa.Column('channel_role', sa.Enum('MEMBER', 'MODERATOR', 'ADMIN', 'OWNER', name='channelroleenum'), nullable=True))
    op.add_column('channel_members', sa.Column('is_muted', sa.Boolean(), nullable=True))
    op.add_column('channel_members', sa.Column('is_banned', sa.Boolean(), nullable=True))
    op.add_column('channel_members', sa.Column('last_read_at', sa.DateTime(), nullable=True))
    
    # Update existing records with default values
    op.execute("UPDATE channel_members SET channel_role = 'MEMBER' WHERE channel_role IS NULL")
    op.execute("UPDATE channel_members SET is_muted = false WHERE is_muted IS NULL")
    op.execute("UPDATE channel_members SET is_banned = false WHERE is_banned IS NULL")
    
    # Now make columns NOT NULL
    op.alter_column('channel_members', 'channel_role', nullable=False)
    op.alter_column('channel_members', 'is_muted', nullable=False)
    op.alter_column('channel_members', 'is_banned', nullable=False)
    
    op.drop_constraint(op.f('channel_members_channel_id_fkey'), 'channel_members', type_='foreignkey')
    op.create_foreign_key(None, 'channel_members', 'channels', ['channel_id'], ['id'], ondelete='CASCADE')
    op.drop_column('channel_members', 'is_admin')
    
    # Add channels columns as nullable first
    op.add_column('channels', sa.Column('channel_type', sa.Enum('GENERAL', 'ACADEMIC', 'PROJECT', 'ANNOUNCEMENT', 'STUDY_GROUP', 'CLUB', 'DEPARTMENT', name='channeltypeenum'), nullable=True))
    op.add_column('channels', sa.Column('is_private', sa.Boolean(), nullable=True))
    op.add_column('channels', sa.Column('is_archived', sa.Boolean(), nullable=True))
    op.add_column('channels', sa.Column('max_members', sa.Integer(), nullable=True))
    op.add_column('channels', sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True))
    op.add_column('channels', sa.Column('avatar_url', sa.String(length=500), nullable=True))
    op.add_column('channels', sa.Column('updated_at', sa.DateTime(), nullable=True))
    
    # Update existing records with default values
    op.execute("UPDATE channels SET channel_type = 'GENERAL' WHERE channel_type IS NULL")
    op.execute("UPDATE channels SET is_private = false WHERE is_private IS NULL")
    op.execute("UPDATE channels SET is_archived = false WHERE is_archived IS NULL")
    op.execute("UPDATE channels SET tags = '{}' WHERE tags IS NULL")
    op.execute("UPDATE channels SET updated_at = NOW() WHERE updated_at IS NULL")
    
    # Now make columns NOT NULL
    op.alter_column('channels', 'channel_type', nullable=False)
    op.alter_column('channels', 'is_private', nullable=False)
    op.alter_column('channels', 'is_archived', nullable=False)
    op.alter_column('channels', 'tags', nullable=False)
    op.alter_column('channels', 'updated_at', nullable=False)
    
    op.alter_column('channels', 'description',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)
    op.drop_column('channels', 'isPrivate')
    
    # Add messages columns as nullable first
    op.add_column('messages', sa.Column('file_name', sa.String(length=255), nullable=True))
    op.add_column('messages', sa.Column('file_size', sa.Integer(), nullable=True))
    op.add_column('messages', sa.Column('is_edited', sa.Boolean(), nullable=True))
    op.add_column('messages', sa.Column('edited_at', sa.DateTime(), nullable=True))
    op.add_column('messages', sa.Column('reply_to_id', sa.UUID(), nullable=True))
    op.add_column('messages', sa.Column('updated_at', sa.DateTime(), nullable=True))
    
    # Update existing records with default values
    op.execute("UPDATE messages SET is_edited = false WHERE is_edited IS NULL")
    op.execute("UPDATE messages SET updated_at = NOW() WHERE updated_at IS NULL")
    
    # Now make columns NOT NULL
    op.alter_column('messages', 'is_edited', nullable=False)
    op.alter_column('messages', 'updated_at', nullable=False)
    
    op.alter_column('messages', 'content',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)
    op.create_index(op.f('ix_messages_id'), 'messages', ['id'], unique=False)
    op.drop_constraint(op.f('messages_channel_id_fkey'), 'messages', type_='foreignkey')
    op.create_foreign_key(None, 'messages', 'messages', ['reply_to_id'], ['id'])
    op.create_foreign_key(None, 'messages', 'channels', ['channel_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'messages', type_='foreignkey')
    op.drop_constraint(None, 'messages', type_='foreignkey')
    op.create_foreign_key(op.f('messages_channel_id_fkey'), 'messages', 'channels', ['channel_id'], ['id'])
    op.drop_index(op.f('ix_messages_id'), table_name='messages')
    op.alter_column('messages', 'content',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.drop_column('messages', 'updated_at')
    op.drop_column('messages', 'reply_to_id')
    op.drop_column('messages', 'edited_at')
    op.drop_column('messages', 'is_edited')
    op.drop_column('messages', 'file_size')
    op.drop_column('messages', 'file_name')
    op.add_column('channels', sa.Column('isPrivate', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.alter_column('channels', 'description',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.drop_column('channels', 'updated_at')
    op.drop_column('channels', 'avatar_url')
    op.drop_column('channels', 'tags')
    op.drop_column('channels', 'max_members')
    op.drop_column('channels', 'is_archived')
    op.drop_column('channels', 'is_private')
    op.drop_column('channels', 'channel_type')
    op.add_column('channel_members', sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'channel_members', type_='foreignkey')
    op.create_foreign_key(op.f('channel_members_channel_id_fkey'), 'channel_members', 'channels', ['channel_id'], ['id'])
    op.drop_column('channel_members', 'last_read_at')
    op.drop_column('channel_members', 'is_banned')
    op.drop_column('channel_members', 'is_muted')
    op.drop_column('channel_members', 'channel_role')
    # ### end Alembic commands ###
